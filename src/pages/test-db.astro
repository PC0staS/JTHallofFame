---
import { createSampleData, testTableAccess, getPhotos } from '../lib/supabase';

if (Astro.request.method === 'POST') {
  try {
    // Test table access
    const tableTest = await testTableAccess();
    console.log('Table access test:', tableTest);
    
    if (!tableTest.success) {
      return new Response(JSON.stringify({ 
        error: 'Cannot access table', 
        details: tableTest.message 
      }), {
        status: 500,
        headers: { 'Content-Type': 'application/json' }
      });
    }
    
    // Create sample data
    const sampleCreated = await createSampleData();
    if (sampleCreated) {
      const photos = await getPhotos();
      return new Response(JSON.stringify({ 
        success: true, 
        message: 'Sample data created successfully!',
        photoCount: photos.length
      }), {
        headers: { 'Content-Type': 'application/json' }
      });
    } else {
      return new Response(JSON.stringify({ 
        error: 'Failed to create sample data' 
      }), {
        status: 500,
        headers: { 'Content-Type': 'application/json' }
      });
    }
  } catch (error) {
    return new Response(JSON.stringify({ 
      error: 'Server error', 
      details: error.message 
    }), {
      status: 500,
      headers: { 'Content-Type': 'application/json' }
    });
  }
}

// GET request - show current status
const tableTest = await testTableAccess();
const photos = await getPhotos();
---

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Database Test</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h1 class="mb-4">üß™ Database Test</h1>
        
        <div class="card mb-4">
            <div class="card-header">
                <h3>Table Access Test</h3>
            </div>
            <div class="card-body">
                <div class={`alert ${tableTest.success ? 'alert-success' : 'alert-danger'}`}>
                    <strong>{tableTest.success ? '‚úÖ Success' : '‚ùå Error'}:</strong>
                    {tableTest.message}
                    {tableTest.count !== undefined && <span> (Records: {tableTest.count})</span>}
                </div>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header">
                <h3>Current Photos</h3>
            </div>
            <div class="card-body">
                <p><strong>Total photos:</strong> {photos.length}</p>
                {photos.length === 0 && (
                    <div>
                        <p class="text-muted">No photos found. Click the button below to create sample data.</p>
                        <button id="createSampleBtn" class="btn btn-primary">Create Sample Data</button>
                    </div>
                )}
                {photos.length > 0 && (
                    <div>
                        <h5>Photos in database:</h5>
                        <ul class="list-group">
                            {photos.map(photo => (
                                <li class="list-group-item">
                                    <strong>{photo.title}</strong> - {photo.image_name}
                                    <br>
                                    <small class="text-muted">Uploaded by: {photo.uploaded_by} at {new Date(photo.uploaded_at).toLocaleString()}</small>
                                </li>
                            ))}
                        </ul>
                    </div>
                )}
            </div>
        </div>

        <div class="mt-4">
            <a href="/dashboard" class="btn btn-success">Go to Gallery</a>
            <a href="/setup" class="btn btn-info">Setup Page</a>
        </div>
    </div>    <script>
        document.getElementById('createSampleBtn')?.addEventListener('click', async () => {
            const btn = document.getElementById('createSampleBtn') as HTMLButtonElement;
            if (!btn) return;
            
            btn.disabled = true;
            btn.textContent = 'Creating...';
            
            try {
                const response = await fetch('/test-db', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                const result = await response.json();
                
                if (result.success) {
                    alert('Sample data created successfully! Refreshing page...');
                    window.location.reload();
                } else {
                    alert('Error: ' + (result.error || 'Unknown error'));
                    btn.disabled = false;
                    btn.textContent = 'Create Sample Data';
                }
            } catch (error) {
                const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';
                alert('Error: ' + errorMessage);
                btn.disabled = false;
                btn.textContent = 'Create Sample Data';
            }
        });
    </script>
</body>
</html>
